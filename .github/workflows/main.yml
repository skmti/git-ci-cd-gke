name: Build and Push Docker Image to GCR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Authenticate with Google Cloud
      run: |
        echo "$SERVICE_ACCOUNT_KEY" > /tmp/keyfile.json
        gcloud auth activate-service-account --key-file=/tmp/keyfile.json --verbosity=debug  # Debugging added here
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth configure-docker gcr.io --quiet  # This is crucial for GCR authentication
        gcloud auth list  # This will show the current active account for debugging
      env:
        SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker Client for Google Cloud
      run: |
        gcloud auth configure-docker gcr.io --quiet  # Ensure Docker is authenticated for GCR
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

    - name: Build Docker image
      run: |
        docker build -t $IMAGE_NAME:latest .
      env:
        IMAGE_NAME: test-deploy-cicd-gke

    - name: Tag and Push Docker image to GCR
      run: |
        echo "Tagging and pushing Docker image to GCR..."
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest  # Tag image for GCR
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG  # Tag image with version tag
        
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest  # Push the latest image to GCR
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG  # Push the versioned image to GCR
        docker images  # List Docker images for debugging
      env:
        IMAGE_NAME: test-deploy-cicd-gke
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GIT_TAG: v1.1.0
        SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Check the GCP permissions
      run: |
        gcloud projects get-iam-policy $PROJECT_ID --filter="bindings.members:$SERVICE_ACCOUNT_EMAIL" --format="json"  # Verify IAM roles for the service account
      env:
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}  # Make sure this email is correct

name: Build, Tag, and Push Java Docker Image to Google Cloud Platform

on:
  push:
    branches: [ main ]  # Trigger on push to the main branch

jobs:
  build-push-gcr:
    name: Build, Tag, and Push Java Docker Image to GCP
    runs-on: ubuntu-latest  # The runner will use an Ubuntu environment
    env:
      IMAGE_NAME: test-deploy-cicd-gke  # Docker image name
      PROJECT_ID: deployment-k8s-gke-demo  # GCP project ID
      REGISTRY: us-east1-docker.pkg.dev  # Artifact Registry location
      REPOSITORY: images  # Artifact Registry repository name

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Set up Google Cloud SDK and authenticate using the service account key
    - uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}  # Service Account Key stored as a secret
        project_id: ${{ env.PROJECT_ID }}  # Set GCP project
        export_default_credentials: true  # Export credentials for gcloud

    # Step 3: Build the Java project using Maven
    - name: Build Java Project with Maven
      run: mvn clean package  # Build the Java project with Maven

    # Step 4: List files in the target directory to verify the .jar file is built
    - name: List Files in Target Directory
      run: ls -l target/

    # Step 5: Build Docker image from Dockerfile
    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .  # Build the image using the Dockerfile

    # Step 6: Automatic version tagging (using current date-time)
    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        # Ensure the latest commit is pulled before attempting to tag it
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git fetch --tags
        # Use current date-time for versioning
        git tag v$(date +'%Y%m%d%H%M%S')  # Example of automatic versioning
        git push --tags
        echo "git-tag=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    # Step 7: Configure Docker authentication for GCP (GCR & Artifact Registry)
    - name: Configure Docker Client for GCP
      run: |
        gcloud auth configure-docker us-east1-docker.pkg.dev --quiet  # Authenticate Docker with Artifact Registry

    # Step 8: Push the Docker image to Artifact Registry
    - name: Push Docker Image to Artifact Registry
      run: |-
        # Get the Git tag from the environment
        GIT_TAG=${{ env.git-tag }}
        # Tag image for Artifact Registry (using both latest and Git tag)
        docker tag $IMAGE_NAME:latest $REGISTRY/$PROJECT_ID/$REPOSITORY:$GIT_TAG
        docker push $REGISTRY/$PROJECT_ID/$REPOSITORY:$GIT_TAG
        docker tag $IMAGE_NAME:latest $REGISTRY/$PROJECT_ID/$REPOSITORY:latest
        docker push $REGISTRY/$PROJECT_ID/$REPOSITORY:latest
